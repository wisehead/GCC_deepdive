
;; Function rtx_const (rtx_const)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r59: preferred AREG, alternative GENERAL_REGS
    a0 (r59,l0) best AREG, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r59,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7

   Insn 29(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 33(l0): point = 9
   Insn 13(l0): point = 11
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 7(l0): point = 19
   Insn 6(l0): point = 21
   Insn 2(l0): point = 23
 a0(r59): [3..4]
 a1(r58): [5..6]
Compressing live ranges: from 26 to 4 - 15%
Ranges after the compression:
 a0(r59): [0..1]
 a1(r58): [2..3]
  regions=2, blocks=6, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2
Disposition:
    1:r58  l0     0    0:r59  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 7, dead_or_set: 5
insn=6, live_throughout: 7, dead_or_set: 
insn=7, live_throughout: 7, dead_or_set: 
insn=8, live_throughout: 7, dead_or_set: 
insn=10, live_throughout: 7, dead_or_set: 
insn=11, live_throughout: 7, dead_or_set: 
insn=13, live_throughout: 7, dead_or_set: 
insn=33, live_throughout: 7, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 
insn=18, live_throughout: 7, dead_or_set: 58
insn=19, live_throughout: 7, dead_or_set: 58, 59
insn=23, live_throughout: 7, dead_or_set: 0, 59
insn=29, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
deleting insn with uid = 19.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
(note 1 0 4 NOTE_INSN_DELETED)

(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rtx_const.c:1 (set (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (reg:SI 5 di [ i ])) 47 {*movsi_1} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 rtx_const.c:2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 name+0 S8 A64])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2] <string_cst 0x7facbc0e7b80>)) 89 {*movdi_1_rex64} (nil))

(insn 7 6 8 2 rtx_const.c:3 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 title+0 S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2] <string_cst 0x7facbc0e7cc0>)) 89 {*movdi_1_rex64} (nil))

(code_label 8 7 9 3 2 ("AGAIN") [1 uses])

(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 rtx_const.c:6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 10 [0xa]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 11 10 12 3 rtx_const.c:6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 619 {*jcc_1} (nil))

(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 33 4 rtx_const.c:7 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (ashift:SI (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 496 {*ashlsi3_1} (nil))

(jump_insn 33 13 34 4 rtx_const.c:8 (set (pc)
        (label_ref 8)) 640 {jump} (nil))

(barrier 34 33 16)

(code_label 16 34 17 5 3 "" [1 uses])

(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 29 5 rtx_const.c:10 (set (reg:SI 0 ax [orig:58 D.1595 ] [58])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) 47 {*movsi_1} (nil))

(insn 29 18 35 5 rtx_const.c:11 (use (reg/i:SI 0 ax)) -1 (nil))

(note 35 29 0 NOTE_INSN_DELETED)

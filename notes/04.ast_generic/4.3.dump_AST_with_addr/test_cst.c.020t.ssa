
;; Function main (main, funcdef_no=1, decl_uid=2397, cgraph_uid=1, symbol_order=1)


Pass statistics of "ssa": ----------------



Renaming block #0



Renaming block #2

Renaming statement a = 123456;

Renaming statement d = 1.014531993865966796875e+1;

Renaming statement name = "This is a string.";

Renaming statement _1 = (double) d;

Renaming statement printf ("a=%d, d=%f,  name=%s\n", a, _1, &name);

Renaming statement D.2403 = 0;

Renaming statement name ={v} {CLOBBER};



Renaming block #3

Renaming statement return D.2403;


DFA Statistics for main

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                              4         32b
DEF operands                              4         32b
VUSE operands                             4         32b
VDEF operands                             3         24b
PHI nodes                                 0          0b
PHI arguments                             0          0b
---------------------------------------------------------
Total memory used by DFA/SSA data                  120b
---------------------------------------------------------



Hash table statistics:
    var_infos:   size 7, 4 elements, 0.615385 collision/search ratio


Pass statistics of "ssa": ----------------

main ()
{
  charD.7 nameD.2401[18];
  floatD.29 dD.2400;
  unsigned intD.9 aD.2399;
  intD.6 D.2403;
  doubleD.30 _1;
  intD.6 _7;

;;   basic block 2, loop depth 0, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY (FALLTHRU,EXECUTABLE)
  a_2 = 123456;
  d_3 = 1.014531993865966796875e+1;
  # .MEM_5 = VDEF <.MEM_4(D)>
  nameD.2401 = "This is a string.";
  _1 = (doubleD.30) d_3;
  # .MEM_6 = VDEF <.MEM_5>
  # USE = anything 
  # CLB = anything 
  printfD.932 ("a=%d, d=%f,  name=%s\n", a_2, _1, &nameD.2401);
  _7 = 0;
  # .MEM_8 = VDEF <.MEM_6>
  nameD.2401 ={v} {CLOBBER};
;;    succ:       3 (FALLTHRU,EXECUTABLE)

;;   basic block 3, loop depth 0, maybe hot
;;    prev block 2, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 (FALLTHRU,EXECUTABLE)
<L1>:
  # VUSE <.MEM_8>
  return _7;
;;    succ:       EXIT

}


